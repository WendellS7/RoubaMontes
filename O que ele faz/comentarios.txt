Trabalho Pratico AED's (Algoritmos e Estrutura de Dados) 2
Jogo de Cartas Rouba-Montes

Organização do código:

Visto as regras, meu programa esta disposta em 6 arquivos:

baralhoPrincipal.c = Contem a lógica do baralho de compras, instanciação, criação de cartas e embaralhamento.
descarte.c = Contém a lógica da área do descarte de cartas, uma função a qual percorre a Lista* retira uma carta,
             e outra a qual adiciona uma carta na Lista*
jogo.c = O qual contem a logica principal do meu Rouba-Montes, associada ao monte de cada jogador. Em suas funções, temos 
         que, empilhaCarta coloca a carta comprada no topo do monte, empilhaDescarte coloca tanto a carta comprada, quanto
         a carta da area do descarte no monte do jogador. As outras funções contem a logica de roubas os montes: verifica
         o topo de cada monte e se caso for igual, empilha todo ele, no monte do jogador da vez.
vitoria.c = Contem a logica que acontece quando o jogo termina, ou seja quando há um vencedor.
main.c = O programa acontece de forma que um comando de repetição vá de 0 a quant_jog, e evitando repetição, cada vez que
         quaisquer funções sejam chamadas, e passado por parametro o indice o for, dessa forma se sabe qual o jogador esta
         jogando, dessa vez. Apos o retorno da compra não ser válido, a logica se encerra e é proclamado um vencedor. Cha -
         ma uma função a qual retorna os vencedores, outra que repassa a Pilha** de cartas daquele jogador para uma Lista*
         que esta na struct jogador o tempo todo, porém nunca instanciada. Logo apos ocorre a ordenação das cartas e em -
         prime em ordem crescente - nos valores: AS, DOIS, TRES, QUATRO, CINCO, SEIS, SETE, OITO, NOVE, DEZ, DAMA, VALETE,
         REI, e naipes : OURO, ESPADA, COPAS, PAUS -, Apos essa logica, é mostrado um renking de colocação com os Jogadores
         do maior para o menor.

*Lista, **Pilha = Estrutura de Dados.
            